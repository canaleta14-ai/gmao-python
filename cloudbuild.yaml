steps:
  # Verificar configuraci√≥n
  - name: "bash"
    script: |
      #!/bin/bash
      echo "üîç Verificando configuraci√≥n..."
      if [ ! -f "app.yaml" ]; then
        echo "‚ùå app.yaml no encontrado"
        exit 1
      fi
      if [ ! -f "main.py" ]; then
        echo "‚ùå main.py no encontrado"
        exit 1
      fi
      echo "‚úÖ Archivos de configuraci√≥n encontrados"

  # Instalar dependencias
  - name: "python:3.11-slim"
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user", "--quiet"]

  # Ejecutar pruebas con cobertura m√≠nima del 70%
  - name: "python:3.11-slim"
    entrypoint: bash
    script: |
      #!/bin/bash
      set -e
      echo "üèó Instalando dependencias para test..."
      pip install -r requirements.txt --user --quiet
      echo "üß™ Ejecutando tests con cobertura (>=70%)..."
      python -m pytest -q --cov=app --cov-report=term-missing --cov-fail-under=70
    env:
      - "FLASK_ENV=testing"

  # Verificar sintaxis de Python
  - name: "python:3.11-slim"
    entrypoint: python
    args: ["-m", "py_compile", "main.py", "app/__init__.py"]

  # Desplegar a App Engine
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      - "app"
      - "deploy"
      - "--version=${_VERSION:-madrid-fix35}"
      - "--quiet"
      - "--promote"

  # Aplicar migraciones en Cloud SQL
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: bash
    script: |
      #!/bin/bash
      echo "üîÑ Aplicando migraciones en Cloud SQL..."
      
      # Configurar variables de entorno
      export FLASK_ENV=production
      export SECRETS_PROVIDER=gcp
      export GOOGLE_CLOUD_PROJECT=mantenimiento-470311
      export DB_TYPE=postgresql
      export DB_USER=gmao-user
      export DB_NAME=gmao
      export DB_HOST=/cloudsql/mantenimiento-470311:europe-west1:gmao-postgres
      
      # Instalar dependencias
      pip install -r requirements.txt --user --quiet
      
      # Ejecutar migraciones
      python aplicar_migraciones_produccion.py
      
      echo "‚úÖ Migraciones completadas"

# Configuraci√≥n de variables de sustituci√≥n
substitutions:
  _VERSION: prod

# Configuraci√≥n de timeout
timeout: "1800s"

# Configuraci√≥n de opciones
options:
  machineType: "E2_HIGHCPU_8"
  logging: CLOUD_LOGGING_ONLY

# Configuraci√≥n de logs
logsBucket: "gs://${PROJECT_ID}-logs"
