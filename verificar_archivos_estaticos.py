#!/usr/bin/env python3
"""
Script para verificar que los archivos est√°ticos se hayan desplegado correctamente.
"""

import requests
import time

def verificar_archivos_estaticos():
    """Verificar que los archivos JavaScript y CSS est√©n actualizados"""
    base_url = "https://gmao-sistema-2025.ew.r.appspot.com"
    
    print("üîç Verificando archivos est√°ticos en producci√≥n...\n")
    
    # Verificar archivo JavaScript de √≥rdenes
    try:
        print("1. Verificando ordenes.js...")
        js_response = requests.get(f"{base_url}/static/js/ordenes.js", timeout=10)
        
        if js_response.status_code == 200:
            print("   ‚úÖ Archivo ordenes.js accesible")
            
            # Verificar funciones de eliminaci√≥n
            if "mostrarModalEliminarOrden" in js_response.text:
                print("   ‚úÖ Funci√≥n mostrarModalEliminarOrden encontrada")
            else:
                print("   ‚ùå Funci√≥n mostrarModalEliminarOrden NO encontrada")
            
            if "confirmarEliminarOrden" in js_response.text:
                print("   ‚úÖ Funci√≥n confirmarEliminarOrden encontrada")
            else:
                print("   ‚ùå Funci√≥n confirmarEliminarOrden NO encontrada")
                
            # Verificar bot√≥n de eliminar en el c√≥digo
            if 'btn-outline-danger action-btn delete' in js_response.text:
                print("   ‚úÖ Bot√≥n de eliminar encontrado en el c√≥digo")
            else:
                print("   ‚ùå Bot√≥n de eliminar NO encontrado en el c√≥digo")
                
        else:
            print(f"   ‚ùå Error accediendo a ordenes.js: {js_response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå Error verificando ordenes.js: {str(e)}")
    
    print()
    
    # Verificar p√°gina de √≥rdenes con autenticaci√≥n simulada
    try:
        print("2. Verificando p√°gina de √≥rdenes...")
        
        # Crear una sesi√≥n para mantener cookies
        session = requests.Session()
        
        # Intentar acceder a la p√°gina principal primero
        main_response = session.get(base_url, timeout=10)
        print(f"   Respuesta p√°gina principal: {main_response.status_code}")
        
        # Intentar acceder a √≥rdenes
        ordenes_response = session.get(f"{base_url}/ordenes", timeout=10, allow_redirects=True)
        print(f"   Respuesta p√°gina √≥rdenes: {ordenes_response.status_code}")
        
        if ordenes_response.status_code == 200:
            # Verificar modal de eliminaci√≥n
            if "modalEliminarOrden" in ordenes_response.text:
                print("   ‚úÖ Modal de eliminaci√≥n encontrado")
            else:
                print("   ‚ùå Modal de eliminaci√≥n NO encontrado")
                
            # Verificar script de √≥rdenes
            if "ordenes.js" in ordenes_response.text:
                print("   ‚úÖ Script ordenes.js referenciado")
            else:
                print("   ‚ùå Script ordenes.js NO referenciado")
        
    except Exception as e:
        print(f"   ‚ùå Error verificando p√°gina de √≥rdenes: {str(e)}")

def main():
    print("=== VERIFICACI√ìN DE ARCHIVOS EST√ÅTICOS ===\n")
    
    # Esperar un poco para que el despliegue se propague
    print("‚è≥ Esperando 10 segundos para que el despliegue se propague...")
    time.sleep(10)
    
    verificar_archivos_estaticos()
    
    print("\n=== VERIFICACI√ìN COMPLETADA ===")
    print("\nüìã PR√ìXIMOS PASOS:")
    print("1. Si los archivos est√°ticos est√°n correctos, el problema puede ser de cache del navegador")
    print("2. Intenta abrir la aplicaci√≥n en modo inc√≥gnito o limpia el cache")
    print("3. URL de la aplicaci√≥n: https://gmao-sistema-2025.ew.r.appspot.com/ordenes")

if __name__ == "__main__":
    main()