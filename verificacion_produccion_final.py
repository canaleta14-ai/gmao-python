#!/usr/bin/env python3
"""
Verificaci√≥n final del sistema listo para producci√≥n
"""
import os
import sqlite3


def verificacion_final_produccion():
    """Verificar que el sistema est√© completamente listo para producci√≥n"""
    print("üéØ === VERIFICACI√ìN FINAL - SISTEMA PRODUCCI√ìN ===")
    print()

    resultados = {
        "base_datos": False,
        "inventario_limpio": False,
        "fifo_disponible": False,
        "interfaz_actualizada": False,
        "scripts_disponibles": False,
    }

    try:
        # 1. Verificar base de datos
        print("1Ô∏è‚É£ VERIFICANDO BASE DE DATOS:")
        conn = sqlite3.connect("instance/database.db")
        cursor = conn.cursor()

        cursor.execute("SELECT COUNT(*) FROM inventario")
        count_inventario = cursor.fetchone()[0]
        print(f"   ‚Ä¢ Art√≠culos en inventario: {count_inventario}")

        cursor.execute(
            'SELECT name FROM sqlite_master WHERE type="table" AND name="lotes"'
        )
        tabla_lotes = cursor.fetchone()
        if tabla_lotes:
            cursor.execute("SELECT COUNT(*) FROM lotes")
            count_lotes = cursor.fetchone()[0]
            print(f"   ‚Ä¢ Lotes existentes: {count_lotes}")
        else:
            print("   ‚Ä¢ Tabla lotes: Se crear√° autom√°ticamente")

        resultados["base_datos"] = True
        resultados["inventario_limpio"] = count_inventario == 0
        conn.close()

        # 2. Verificar sistema FIFO
        print("\n2Ô∏è‚É£ VERIFICANDO SISTEMA FIFO:")
        archivos_fifo = [
            "app/blueprints/lotes.py",
            "static/js/fifo-inventario-badge.js",
            "app/services/servicio_fifo.py",
        ]

        fifo_ok = True
        for archivo in archivos_fifo:
            if os.path.exists(archivo):
                print(f"   ‚úÖ {archivo}")
            else:
                print(f"   ‚ùå {archivo} - NO ENCONTRADO")
                fifo_ok = False

        resultados["fifo_disponible"] = fifo_ok

        # 3. Verificar interfaz actualizada
        print("\n3Ô∏è‚É£ VERIFICANDO INTERFAZ:")
        archivo_inventario = "app/templates/inventario/inventario.html"

        if os.path.exists(archivo_inventario):
            with open(archivo_inventario, "r", encoding="utf-8") as f:
                contenido = f.read()

            tiene_fifo = "btn-fifo" in contenido and "Gesti√≥n FIFO" in contenido
            tiene_eliminar = (
                "mostrarModalEliminarArticulos" in contenido
                and "Eliminar Art√≠culos" in contenido
            )

            print(f"   ‚úÖ Template inventario existe")
            print(f"   {'‚úÖ' if tiene_fifo else '‚ùå'} Bot√≥n FIFO integrado")
            print(f"   {'‚úÖ' if tiene_eliminar else '‚ùå'} Bot√≥n eliminar art√≠culos")

            resultados["interfaz_actualizada"] = tiene_fifo and tiene_eliminar
        else:
            print("   ‚ùå Template inventario no encontrado")

        # 4. Verificar JavaScript
        print("\n4Ô∏è‚É£ VERIFICANDO JAVASCRIPT:")
        archivo_js = "static/js/inventario.js"

        if os.path.exists(archivo_js):
            with open(archivo_js, "r", encoding="utf-8") as f:
                contenido_js = f.read()

            tiene_modal_eliminar = "mostrarModalEliminarArticulos" in contenido_js
            tiene_confirmacion = "confirmarEliminacionArticulos" in contenido_js

            print(f"   ‚úÖ JavaScript inventario existe")
            print(f"   {'‚úÖ' if tiene_modal_eliminar else '‚ùå'} Funci√≥n modal eliminar")
            print(f"   {'‚úÖ' if tiene_confirmacion else '‚ùå'} Funci√≥n confirmaci√≥n")

            resultados["scripts_disponibles"] = (
                tiene_modal_eliminar and tiene_confirmacion
            )
        else:
            print("   ‚ùå JavaScript inventario no encontrado")

        # 5. Resumen final
        print("\n" + "=" * 60)
        print("üìä RESUMEN VERIFICACI√ìN:")
        print("=" * 60)

        for categoria, estado in resultados.items():
            icono = "‚úÖ" if estado else "‚ùå"
            print(f"   {icono} {categoria.replace('_', ' ').title()}")

        todos_ok = all(resultados.values())

        if todos_ok:
            print(f"\nüéâ ¬°SISTEMA LISTO PARA PRODUCCI√ìN!")
            print("=" * 60)
            print("‚úÖ CARACTER√çSTICAS DISPONIBLES:")
            print("   ‚Ä¢ Inventario completamente limpio")
            print("   ‚Ä¢ Sistema FIFO integrado y funcional")
            print("   ‚Ä¢ Bot√≥n eliminar art√≠culos con confirmaci√≥n")
            print("   ‚Ä¢ Base de datos optimizada")
            print("   ‚Ä¢ Interfaz moderna y completa")
            print()
            print("üöÄ PR√ìXIMOS PASOS:")
            print("   1. Iniciar servidor: python run.py")
            print("   2. Acceder a: http://127.0.0.1:5000/inventario/")
            print("   3. Agregar art√≠culos reales de producci√≥n")
            print("   4. Usar gesti√≥n FIFO cuando sea necesario")
            print("   5. Eliminar art√≠culos con el bot√≥n de confirmaci√≥n")

        else:
            print(f"\n‚ö†Ô∏è  SISTEMA NECESITA AJUSTES")
            print("   Revise los elementos marcados con ‚ùå")

        return todos_ok

    except Exception as e:
        print(f"‚ùå Error en verificaci√≥n: {e}")
        return False


if __name__ == "__main__":
    verificacion_final_produccion()
