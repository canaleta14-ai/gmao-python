"""
Script de prueba para verificar las estad√≠sticas FIFO
"""

import sys
import os
from pathlib import Path

# Agregar el directorio ra√≠z al path
root_dir = Path(__file__).parent.parent
sys.path.insert(0, str(root_dir))

from app.factory import create_app
from app.controllers.estadisticas_controller import obtener_estadisticas
import json


def test_estadisticas():
    """Probar el endpoint de estad√≠sticas"""
    print("=" * 70)
    print("üß™ PRUEBA DE ESTAD√çSTICAS FIFO")
    print("=" * 70)
    print()

    # Crear aplicaci√≥n
    app = create_app()

    with app.app_context():
        try:
            # Obtener estad√≠sticas
            print("üìä Obteniendo estad√≠sticas...")
            stats = obtener_estadisticas()

            print("\n‚úÖ Estad√≠sticas obtenidas exitosamente\n")

            # Mostrar estad√≠sticas generales
            print("üìã √ìrdenes de Trabajo:")
            print(f"   - Por estado: {stats.get('ordenes_por_estado', {})}")
            print(f"   - √öltima semana: {stats.get('ordenes_ultima_semana', 0)}")
            print()

            print("üè≠ Activos:")
            print(f"   - Por estado: {stats.get('activos_por_estado', {})}")
            print(f"   - Total: {stats.get('total_activos', 0)}")
            print()

            # Mostrar estad√≠sticas FIFO
            if "fifo_stats" in stats:
                fifo = stats["fifo_stats"]
                print("üì¶ ESTAD√çSTICAS FIFO:")
                print(f"   - Total de lotes: {fifo.get('total_lotes', 0)}")
                print(f"   - Lotes disponibles: {fifo.get('lotes_disponibles', 0)}")
                print(f"   - Art√≠culos con lotes: {fifo.get('articulos_con_lotes', 0)}")
                print(f"   - Total art√≠culos: {fifo.get('total_articulos', 0)}")
                print(f"   - Cobertura: {fifo.get('porcentaje_cobertura', 0)}%")
                print(
                    f"   - Pr√≥ximos a vencer (30 d√≠as): {fifo.get('lotes_proximos_vencer', 0)}"
                )
                print(f"   - Lotes vencidos: {fifo.get('lotes_vencidos', 0)}")
                print(
                    f"   - Valor total inventario: ${fifo.get('valor_total_inventario', 0):,.2f}"
                )
                print()

                # Verificar coherencia
                if fifo["total_lotes"] > 0:
                    print("‚úÖ Sistema FIFO configurado correctamente")
                else:
                    print("‚ö†Ô∏è No hay lotes en el sistema")

                if fifo["porcentaje_cobertura"] == 100:
                    print(
                        "‚úÖ Cobertura completa: Todos los art√≠culos con stock tienen lotes"
                    )
                elif fifo["porcentaje_cobertura"] > 0:
                    print(
                        f"‚ö†Ô∏è Cobertura parcial: {fifo['porcentaje_cobertura']}% de art√≠culos con lotes"
                    )
                else:
                    print("‚ùå Sin cobertura: Ning√∫n art√≠culo tiene lotes")

            else:
                print("‚ùå No se encontraron estad√≠sticas FIFO en la respuesta")

            print()
            print("=" * 70)
            print("üìÑ JSON COMPLETO:")
            print("=" * 70)
            print(json.dumps(stats, indent=2, ensure_ascii=False, default=str))

        except Exception as e:
            print(f"‚ùå Error obteniendo estad√≠sticas: {e}")
            import traceback

            traceback.print_exc()


if __name__ == "__main__":
    test_estadisticas()
