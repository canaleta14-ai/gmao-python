"""Agregar sistema de alertas inteligente

Revision ID: b6a3020733b2
Revises: a4fe67ffab43
Create Date: 2025-10-12 15:09:21.128428

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b6a3020733b2'
down_revision = 'a4fe67ffab43'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alertas_configuracion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('tipo_alerta', sa.String(length=50), nullable=False),
    sa.Column('prioridad', sa.String(length=20), nullable=False),
    sa.Column('condicion_sql', sa.Text(), nullable=False),
    sa.Column('umbral_valor', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('frecuencia_minutos', sa.Integer(), nullable=True),
    sa.Column('activa', sa.Boolean(), nullable=True),
    sa.Column('destinatarios_json', sa.Text(), nullable=True),
    sa.Column('escalamiento_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('alertas_kpis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha', sa.Date(), nullable=False),
    sa.Column('total_alertas', sa.Integer(), nullable=True),
    sa.Column('alertas_criticas', sa.Integer(), nullable=True),
    sa.Column('alertas_altas', sa.Integer(), nullable=True),
    sa.Column('alertas_medias', sa.Integer(), nullable=True),
    sa.Column('alertas_bajas', sa.Integer(), nullable=True),
    sa.Column('tiempo_promedio_respuesta', sa.Integer(), nullable=True),
    sa.Column('tiempo_promedio_resolucion', sa.Integer(), nullable=True),
    sa.Column('porcentaje_resueltas', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('alertas_escaladas', sa.Integer(), nullable=True),
    sa.Column('notificaciones_enviadas', sa.Integer(), nullable=True),
    sa.Column('notificaciones_error', sa.Integer(), nullable=True),
    sa.Column('tasa_entrega', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('fecha')
    )
    op.create_table('alertas_historial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('configuracion_id', sa.Integer(), nullable=False),
    sa.Column('estado', sa.String(length=20), nullable=False),
    sa.Column('mensaje', sa.Text(), nullable=False),
    sa.Column('datos_json', sa.Text(), nullable=True),
    sa.Column('prioridad', sa.String(length=20), nullable=False),
    sa.Column('usuario_asignado_id', sa.Integer(), nullable=True),
    sa.Column('fecha_activacion', sa.DateTime(), nullable=True),
    sa.Column('fecha_reconocimiento', sa.DateTime(), nullable=True),
    sa.Column('fecha_resolucion', sa.DateTime(), nullable=True),
    sa.Column('notas_resolucion', sa.Text(), nullable=True),
    sa.Column('nivel_escalamiento', sa.Integer(), nullable=True),
    sa.Column('fecha_ultimo_escalamiento', sa.DateTime(), nullable=True),
    sa.Column('escalamiento_automatico', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['configuracion_id'], ['alertas_configuracion.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notificaciones_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('alerta_id', sa.Integer(), nullable=False),
    sa.Column('canal', sa.String(length=20), nullable=False),
    sa.Column('destinatario', sa.String(length=255), nullable=False),
    sa.Column('asunto', sa.String(length=255), nullable=True),
    sa.Column('mensaje', sa.Text(), nullable=True),
    sa.Column('estado', sa.String(length=20), nullable=True),
    sa.Column('intentos', sa.Integer(), nullable=True),
    sa.Column('maximo_intentos', sa.Integer(), nullable=True),
    sa.Column('ultimo_intento', sa.DateTime(), nullable=True),
    sa.Column('fecha_envio', sa.DateTime(), nullable=True),
    sa.Column('error_mensaje', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['alerta_id'], ['alertas_historial.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('inventario', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_inventario_codigo_like'), sqlite_where=sa.text("codigo LIKE 'PERF-%'"))

    with op.batch_alter_table('lote_inventario', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_lote_fecha_entrada_fifo'))
        batch_op.drop_index(batch_op.f('idx_lote_inventario_activo'), sqlite_where=sa.text('activo = 1'))
        batch_op.drop_index(batch_op.f('idx_lote_inventario_cantidad'))
        batch_op.drop_index(batch_op.f('idx_lote_vencimiento'), sqlite_where=sa.text('cantidad_actual > 0'))

    with op.batch_alter_table('movimiento_lote', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_movimiento_fecha_desc'))
        batch_op.drop_index(batch_op.f('idx_movimiento_lote_fecha'))
        batch_op.drop_index(batch_op.f('idx_movimiento_tipo'))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('movimiento_lote', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_movimiento_tipo'), ['tipo_movimiento', 'fecha'], unique=False)
        batch_op.create_index(batch_op.f('idx_movimiento_lote_fecha'), ['lote_id', 'fecha'], unique=False)
        batch_op.create_index(batch_op.f('idx_movimiento_fecha_desc'), ['fecha'], unique=False)

    with op.batch_alter_table('lote_inventario', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_lote_vencimiento'), ['fecha_vencimiento', 'cantidad_actual'], unique=False, sqlite_where=sa.text('cantidad_actual > 0'))
        batch_op.create_index(batch_op.f('idx_lote_inventario_cantidad'), ['inventario_id', 'cantidad_actual'], unique=False)
        batch_op.create_index(batch_op.f('idx_lote_inventario_activo'), ['inventario_id', 'activo', 'cantidad_actual'], unique=False, sqlite_where=sa.text('activo = 1'))
        batch_op.create_index(batch_op.f('idx_lote_fecha_entrada_fifo'), ['inventario_id', 'fecha_entrada', 'id'], unique=False)

    with op.batch_alter_table('inventario', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_inventario_codigo_like'), ['codigo'], unique=False, sqlite_where=sa.text("codigo LIKE 'PERF-%'"))

    op.drop_table('notificaciones_log')
    op.drop_table('alertas_historial')
    op.drop_table('alertas_kpis')
    op.drop_table('alertas_configuracion')
    # ### end Alembic commands ###
