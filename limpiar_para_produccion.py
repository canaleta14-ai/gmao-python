#!/usr/bin/env python3
"""
Script para limpiar completamente el inventario para producci√≥n
"""
import sqlite3


def limpiar_inventario_completo():
    """Eliminar todos los art√≠culos del inventario para empezar limpio"""
    print("üßπ === LIMPIEZA COMPLETA PARA PRODUCCI√ìN ===")

    try:
        conn = sqlite3.connect("instance/database.db")
        cursor = conn.cursor()

        # Verificar qu√© art√≠culos hay actualmente
        cursor.execute(
            "SELECT codigo, descripcion, stock_actual FROM inventario WHERE activo = 1"
        )
        articulos = cursor.fetchall()

        if not articulos:
            print("‚úÖ El inventario ya est√° vac√≠o")
            conn.close()
            return True

        print(f"\nüìä Art√≠culos actuales a eliminar:")
        for codigo, desc, stock in articulos:
            print(f"   ‚Ä¢ {codigo}: {desc} (Stock: {stock})")

        print(f"\n‚ö†Ô∏è  ¬øEliminar TODOS los {len(articulos)} art√≠culos del inventario?")
        print("   Esta acci√≥n preparar√° el sistema para producci√≥n limpia.")
        respuesta = input("   Escribe 'PRODUCCION' para confirmar: ").strip().upper()

        if respuesta != "PRODUCCION":
            print("‚ùå Operaci√≥n cancelada")
            conn.close()
            return False

        print(f"\nüóëÔ∏è  Eliminando art√≠culos...")

        # Eliminar lotes asociados (si existen)
        cursor.execute(
            'SELECT name FROM sqlite_master WHERE type="table" AND name="lotes"'
        )
        if cursor.fetchone():
            cursor.execute("DELETE FROM lotes")
            lotes_eliminados = cursor.rowcount
            print(f"   ‚úÖ {lotes_eliminados} lotes eliminados")

        # Eliminar movimientos de inventario (si existen)
        cursor.execute(
            'SELECT name FROM sqlite_master WHERE type="table" AND name="movimientos_inventario"'
        )
        if cursor.fetchone():
            cursor.execute("DELETE FROM movimientos_inventario")
            movimientos_eliminados = cursor.rowcount
            print(f"   ‚úÖ {movimientos_eliminados} movimientos eliminados")

        # Eliminar art√≠culos del inventario
        cursor.execute("DELETE FROM inventario")
        articulos_eliminados = cursor.rowcount
        print(f"   ‚úÖ {articulos_eliminados} art√≠culos eliminados")

        conn.commit()

        # Verificar que est√° limpio
        cursor.execute("SELECT COUNT(*) FROM inventario")
        restantes = cursor.fetchone()[0]

        if restantes == 0:
            print(f"\nüéâ ¬°SISTEMA LIMPIO PARA PRODUCCI√ìN!")
            print("   ‚Ä¢ Inventario: 0 art√≠culos")
            print("   ‚Ä¢ Lotes: 0 registros")
            print("   ‚Ä¢ Movimientos: 0 registros")
            print("   ‚Ä¢ Sistema FIFO: Disponible")
            print("   ‚Ä¢ Integraci√≥n: Activa en /inventario")
        else:
            print(f"‚ö†Ô∏è  A√∫n quedan {restantes} art√≠culos")

        conn.close()
        return restantes == 0

    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False


if __name__ == "__main__":
    print("üè≠ PREPARACI√ìN PARA PRODUCCI√ìN")
    print("=" * 40)
    print("Este script eliminar√° TODOS los art√≠culos del inventario")
    print("para dejar el sistema completamente limpio para producci√≥n.")
    print("=" * 40)

    exito = limpiar_inventario_completo()

    if exito:
        print("\n‚úÖ RESULTADO: Sistema listo para producci√≥n")
        print("üí° Pr√≥ximos pasos:")
        print("   1. Agregar art√≠culos reales de producci√≥n")
        print("   2. Usar bot√≥n eliminar cuando sea necesario")
        print("   3. Sistema FIFO disponible para lotes reales")
    else:
        print("\n‚ùå RESULTADO: No se pudo completar la limpieza")
